<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="Add new Supplier" xml:space="preserve">
    <value>Add new Supplier</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>House# 41,Street# P21,Borey Peng Houth</value>
  </data>
  <data name="Address in Khmer" xml:space="preserve">
    <value>Address in Khmer</value>
  </data>
  <data name="Amount Due" xml:space="preserve">
    <value>Amount Due</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Cambodia" xml:space="preserve">
    <value>Cambodia</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Co" xml:space="preserve">
    <value>Khmer Cultural Heritage </value>
  </data>
  <data name="Company Name" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="Company Name in Khmer" xml:space="preserve">
    <value>Company Name in Khmer</value>
  </data>
  <data name="Confirm Delete" xml:space="preserve">
    <value>Confirm Delete</value>
  </data>
  <data name="Cost Price" xml:space="preserve">
    <value>Cost Price</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Country in Khmer" xml:space="preserve">
    <value>Country in Khmer</value>
  </data>
  <data name="Country/Region" xml:space="preserve">
    <value>Country/Region</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="Customer Name" xml:space="preserve">
    <value>Customer Name</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Generate Report" xml:space="preserve">
    <value>Generate Report</value>
  </data>
  <data name="Inline Discount" xml:space="preserve">
    <value>Inline Discount</value>
  </data>
  <data name="invoice" xml:space="preserve">
    <value>INVOICE</value>
  </data>
  <data name="Invoice To" xml:space="preserve">
    <value>Invoice To</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No.</value>
  </data>
  <data name="Order Delete" xml:space="preserve">
    <value>Order Delete</value>
  </data>
  <data name="Order List" xml:space="preserve">
    <value>Order List</value>
  </data>
  <data name="Order No" xml:space="preserve">
    <value>Order No.</value>
  </data>
  <data name="Phnom Penh" xml:space="preserve">
    <value>Phnom Penh</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="Position in Khmer" xml:space="preserve">
    <value>Position in Khmer</value>
  </data>
  <data name="Preview Report" xml:space="preserve">
    <value>Preview Report</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Product Name" xml:space="preserve">
    <value>Product Name</value>
  </data>
  <data name="Product Ordered" xml:space="preserve">
    <value>Product Ordered</value>
  </data>
  <data name="Product Purchased" xml:space="preserve">
    <value>Product Purchased</value>
  </data>
  <data name="Purchase Date" xml:space="preserve">
    <value>Purchase Date</value>
  </data>
  <data name="Purchase Details" xml:space="preserve">
    <value>Purchase Details</value>
  </data>
  <data name="Purchase From" xml:space="preserve">
    <value>Purchase From</value>
  </data>
  <data name="Purchaser" xml:space="preserve">
    <value>Purchaser</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="question" xml:space="preserve">
    <value>Are you sure you want to delete this order</value>
  </data>
  <data name="Sale Supervisor" xml:space="preserve">
    <value>Sale Supervisor</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="search" xml:space="preserve">
    <value>search order</value>
  </data>
  <data name="search supplier" xml:space="preserve">
    <value>search supplier</value>
  </data>
  <data name="Show in row" xml:space="preserve">
    <value>Show in row</value>
  </data>
  <data name="Sub Total" xml:space="preserve">
    <value>Sub Total</value>
  </data>
  <data name="Supplier Create" xml:space="preserve">
    <value>Supplier Create</value>
  </data>
  <data name="Supplier Delete" xml:space="preserve">
    <value>Supplier Delete</value>
  </data>
  <data name="Supplier Khmer Name" xml:space="preserve">
    <value>Supplier Khmer Name</value>
  </data>
  <data name="Supplier List" xml:space="preserve">
    <value>Supplier List</value>
  </data>
  <data name="Supplier Name" xml:space="preserve">
    <value>Supplier Name</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Total Amount" xml:space="preserve">
    <value>Total Amount</value>
  </data>
  <data name="Total Price" xml:space="preserve">
    <value>Total Price</value>
  </data>
  <data name="Trading" xml:space="preserve">
    <value>Trading</value>
  </data>
  <data name="Unit Price" xml:space="preserve">
    <value>Unit Price</value>
  </data>
  <data name="Website" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="Who made the purchase" xml:space="preserve">
    <value>Who made the purchase</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>